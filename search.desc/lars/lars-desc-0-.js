searchState.loadedDescShard("lars", 0, "Represents an RGB color with values between <code>0.0</code> and <code>1.0</code>. …\nThe <strong>identity matrix</strong>:\nThe <strong>identity matrix</strong>:\nA 2×2 matrix of <code>f64</code> values.\na 3×3 matrix of <code>f64</code> values.\nA one Vector (1.0, 1.0, 1.0)\nA one Vector (1.0, 1.0, 1.0)\nRepresents a 2D point in space.\nRepresents a 3D point in space.\nA Unit Vector in X (1.0, 0.0, 0.0)\nA Unit Vector in X (1.0, 0.0, 0.0)\nA Unit Vector in Y (0.0, 1.0, 0.0)\nA Unit Vector in Y (0.0, 1.0, 0.0)\nA Unit Vector in Z (0.0, 0.0, 1.0)\nA 2-dimensional vector type\nA 3-dimensional vector type.\nThe <strong>zero matrix</strong>:\nThe <strong>zero matrix</strong>:\nA zero Vector (0.0, 0.0, 0.0)\nA zero Vector (0.0, 0.0, 0.0)\nTop-left element.\nFirst row, first column element.\nTop-right element.\nFirst row, second column element.\nBottom-left element.\nFirst row, third column element.\nReturns the <strong>scalar 2D cross product</strong> between <code>self</code> and …\nReturns the <strong>cross product</strong> between <code>self</code> and another <code>Vec3</code>.\nBottom-right element.\nSecond row, first column element.\nReturns the <strong>determinant</strong> of the matrix.\nReturns the <strong>determinant</strong> of the matrix.\nFinds the unsigned distance between <code>self</code> and another 3D …\nFinds the unsigned distance between <code>self</code> and another 3D …\nFinds the unsigned distance between <code>self</code> and another 3D …\nFinds the unsigned distance between <code>self</code> and another 3D …\nFinds the unsigned distance between <code>self</code> and another 3D …\nFinds the unsigned distance between <code>self</code> and another 3D …\nFinds the unsigned distance between <code>self</code> and another 3D …\nFinds the unsigned distance between <code>self</code> and another 3D …\nReturns the <strong>dot product</strong> between <code>self</code> and another <code>Vec2</code>.\nReturns the <strong>dot product</strong> between <code>self</code> and another <code>Vec3</code>.\nSecond row, second column element.\nSecond row, third column element.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThird row, first column element.\nThird row, second column element.\nThird row, third column element.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <strong>inverse</strong> of the matrix, if it exists.\nReturns the <strong>inverse</strong> of the matrix, if it exists.\nReturns the <strong>magnitude</strong> (length) of the vector.\nReturns the <strong>magnitude</strong> (length) of the vector.\nReturns the <strong>magnitude</strong>  of the vector, squared.\nReturns the <strong>magnitude</strong>  of the vector, squared.\nApplies a function <code>f</code> to each component (<code>x</code>, <code>y</code>) of the …\nApplies a function <code>f</code> to each component (<code>x</code>, <code>y</code>, and <code>z</code>) of …\nReturns a <strong>normalized</strong> (unit-length) version of the vector.\nReturns a <strong>normalized</strong> version of the vector (unit length).\nX component of the vector.\nX component of the vector.\nX component of the vector.\nX component of the vector.\nX component of the vector.\nY component of the vector.\nY component of the vector.\nY component of the vector.\nY component of the vector.\nY component of the vector.\nZ component of the vector.\nZ component of the vector.\nZ component of the vector.")