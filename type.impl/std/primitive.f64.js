(function() {
    var type_impls = Object.fromEntries([["lars",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CVec2%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/lars/vector/vector2.rs.html#155-163\">Source</a><a href=\"#impl-Mul%3CVec2%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"lars/struct.Vec2.html\" title=\"struct lars::Vec2\">Vec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h3><div class=\"docblock\"><p>Implements <strong>scalar multiplication</strong> for <code>Scalar * Vec2</code>.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">use </span>lars::Vec2;\n<span class=\"kw\">let </span>v = Vec2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>);\n<span class=\"kw\">let </span>scaled = <span class=\"number\">2.0 </span>* v;\n<span class=\"macro\">assert_eq!</span>(scaled, Vec2::new(<span class=\"number\">2.0</span>, <span class=\"number\">4.0</span>));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/lars/vector/vector2.rs.html#156\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"lars/struct.Vec2.html\" title=\"struct lars::Vec2\">Vec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lars/vector/vector2.rs.html#157-162\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, vector: <a class=\"struct\" href=\"lars/struct.Vec2.html\" title=\"struct lars::Vec2\">Vec2</a>) -&gt; <a class=\"struct\" href=\"lars/struct.Vec2.html\" title=\"struct lars::Vec2\">Vec2</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Vec2>","lars::vector::scalar::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CVec3%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/lars/vector/vector3.rs.html#161-170\">Source</a><a href=\"#impl-Mul%3CVec3%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"lars/struct.Vec3.html\" title=\"struct lars::Vec3\">Vec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h3><div class=\"docblock\"><p>Implements scalar multiplication of a vector by a float (<code>f64</code>) or Scalar</p>\n</div></section></summary><div class=\"docblock\"><p>This enables <code>Scalar * Vec3</code> syntax.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code> <span class=\"kw\">use </span>lars::Vec3;\n<span class=\"kw\">let </span>v = Vec3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>scaled = <span class=\"number\">2.0 </span>* v;\n<span class=\"macro\">assert_eq!</span>(scaled, Vec3::new(<span class=\"number\">2.0</span>, <span class=\"number\">4.0</span>, <span class=\"number\">6.0</span>));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/lars/vector/vector3.rs.html#162\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"lars/struct.Vec3.html\" title=\"struct lars::Vec3\">Vec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lars/vector/vector3.rs.html#163-169\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, vector: <a class=\"struct\" href=\"lars/struct.Vec3.html\" title=\"struct lars::Vec3\">Vec3</a>) -&gt; <a class=\"struct\" href=\"lars/struct.Vec3.html\" title=\"struct lars::Vec3\">Vec3</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Vec3>","lars::vector::scalar::Scalar"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[5848]}